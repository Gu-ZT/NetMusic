buildscript {
    repositories {
        maven { url = 'https://maven.minecraftforge.net' }
        maven { url = 'https://maven.parchmentmc.org' }
        mavenCentral()
        gradlePluginPortal()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.+', changing: true
        classpath 'org.parchmentmc:librarian:1.+'
        classpath 'gradle.plugin.com.github.johnrengelman:shadow:7.1.2'
    }
}
apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'org.parchmentmc.librarian.forgegradle'
apply plugin: 'eclipse'
apply plugin: 'com.github.johnrengelman.shadow'
apply plugin: 'java'

version = '1.1.3'
group = 'com.github.tartaricacid'
archivesBaseName = 'netmusic-1.20.1'

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

minecraft {
    mappings channel: 'parchment', version: '2023.08.20-1.20.1'
    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')
    runs {
        client {
            jvmArgs "-XX:+AllowEnhancedClassRedefinition"
            workingDirectory project.file('run/client_a')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'fml.earlyprogresswindow', 'false'
            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"
            mods {
                netmusic {
                    source sourceSets.main
                }
            }
        }

        client2 {
            parent minecraft.runs.client
            workingDirectory project.file('run/client_b')
            args '--username', 'tartaric_acid'
            mods {
                netmusic {
                    source sourceSets.main
                }
            }
        }

        server {
            jvmArgs "-XX:+AllowEnhancedClassRedefinition"
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'forge.enabledGameTestNamespaces', 'netmusic'
            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"
            mods {
                netmusic {
                    source sourceSets.main
                }
            }
        }
    }
}

sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {
    maven {
        // location of the maven that hosts JEI files since January 2023
        // Patchouli
        name = "Jared's maven"
        url = "https://maven.blamejared.com/"
    }
    maven {
        // location of a maven mirror for JEI files, as a fallback
        name = "ModMaven"
        url = "https://modmaven.dev"
    }
    maven {
        name = "Curse Maven"
        url = "https://www.cursemaven.com"
        content {
            includeGroup "curse.maven"
        }
    }
}

dependencies {
    minecraft 'net.minecraftforge:forge:1.20.1-47.1.0'
    minecraftLibrary 'com.googlecode.soundlibs:mp3spi:1.9.5.4'

    // compile against the JEI API but do not include it at runtime
    compileOnly(fg.deobf("mezz.jei:jei-1.20.1-common-api:15.0.0.12"))
    compileOnly(fg.deobf("mezz.jei:jei-1.20.1-forge-api:15.0.0.12"))
    // at runtime, use the full JEI jar for Forge
    runtimeOnly(fg.deobf("mezz.jei:jei-1.20.1-forge:15.0.0.12"))

    implementation fg.deobf("curse.maven:touhou-little-maid-355044:4968578")
    //implementation fg.deobf("curse.maven:touhou-little-maid-355044:5054217")

    runtimeOnly "curse.maven:kotlin-for-forge-351264:4983659"
    runtimeOnly fg.deobf("curse.maven:libipn-679177:4870127")
    implementation fg.deobf("curse.maven:inventory-profiles-next-495267:4813458")
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}

shadowJar {
    dependencies {
        include(dependency("com.googlecode.soundlibs:mp3spi:1.9.5.4"))
        include(dependency("com.googlecode.soundlibs:jlayer:1.0.1.4"))
        include(dependency("com.googlecode.soundlibs:tritonus-share:0.3.7.4"))
    }

    relocate 'javazoom.jl', 'com.github.tartaricacid.netmusic.soundlibs.javazoom.jl'
    relocate 'javazoom.spi', 'com.github.tartaricacid.netmusic.soundlibs.javazoom.spi'
    relocate 'org.tritonus', 'com.github.tartaricacid.netmusic.soundlibs.org.tritonus'

    mergeServiceFiles()
}

reobf {
    shadowJar {}
}

task shadowJarPublish(type: Jar) {
    dependsOn reobfShadowJar
    archiveClassifier = "all"
    from zipTree("${project.projectDir}/build/reobfShadowJar/output.jar")
}

assemble.dependsOn shadowJar
tasks.build.dependsOn shadowJarPublish
